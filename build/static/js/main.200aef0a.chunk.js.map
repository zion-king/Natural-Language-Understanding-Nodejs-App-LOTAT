{"version":3,"sources":["components/Header/Header.js","components/Header/index.js","components/ControlContainer/ControlContainer.js","components/ControlContainer/index.js","components/ProgressBar/ProgressBar.js","components/ProgressBar/index.js","components/Features/utils.js","components/Features/Categories.js","components/Features/Concepts.js","components/Features/Emotion.js","components/Features/Entities.js","components/Features/Keywords.js","components/Features/Sentiment.js","components/Features/Syntax.js","components/Features/SemanticRoles.js","components/OutputContainer/OutputContainer.js","components/OutputContainer/index.js","components/Toast/Toast.js","components/Toast/index.js","components/ServiceContainer/ServiceContainer.js","components/ServiceContainer/index.js","hooks/useScript.js","App.js","serviceWorker.js","index.js"],"names":["Header","description","links","title","Tile","className","map","link","defaultProps","Link","key","target","rel","href","Button","kind","renderIcon","Launch16","ControlContainer","isAnalyzing","onAnalyzeCall","useState","inputType","setInputType","defaultInputs","url","setUrl","text","setText","invalidInputMessage","type","length","isURL","validateInput","ContentSwitcher","onChange","e","name","Switch","selected","FormGroup","legendText","toUpperCase","TextArea","id","labelText","value","placeholder","invalid","invalidText","hideLabel","rows","light","disabled","onClick","ProgressBar","num","progress","style","width","Math","abs","round","toFixed","formatNumber","TableContainer","DataTable","Table","TableHead","TableRow","TableBody","TableHeader","renderTable","renderCell","headers","getHeaderProps","header","row","cells","Categories","language","result","keyword","i","render","cell","TableCell","info","Concepts","Emotion","document","emotion","Object","keys","score","Entities","Keywords","sortRow","a","b","Sentiment","Syntax","tokens","SemanticRoles","props","CodeSnippet","JSON","stringify","features","categories","concepts","entities","keywords","sentiment","syntax","OutputContainer","results","selectedFeature","setSelectedFeature","outputType","setOutputType","onOutputTypeChange","onSelectedFeatureChange","selectedItem","Feature","Dropdown","label","items","selectedIndex","ISO6391","getName","enableClipboard","displayDataTypes","displayObjectSize","collapsed","collapseStringsAfterLength","theme","lineHeight","src","renderResults","Toast","caption","children","hideAfterFirstDisplay","hideCloseButton","iconDescription","lowContrast","onCloseButtonClick","role","subtitle","timeout","setId","hideToast","setHideToast","useEffect","random","toString","substring","element","querySelector","undefined","window","localStorage","getItem","setItem","semantic_roles","lemma","part_of_speech","sentences","ServiceContainer","setIsAnalyzing","setResults","error","setError","params","fetch","method","body","then","response","json","data","catch","err","message","finally","useScript","script","createElement","async","appendChild","removeChild","App","Boolean","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.200aef0a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tile } from 'carbon-components-react';\nimport { Button, Link } from 'carbon-components-react';\nimport Api124 from '@carbon/icons-react/lib/API--1/24';\nimport Document24 from '@carbon/icons-react/lib/document/24';\nimport IbmCloud24 from '@carbon/icons-react/lib/ibm-cloud/24';\nimport Launch16 from '@carbon/icons-react/lib/launch/16';\nimport LogoGithub24 from '@carbon/icons-react/lib/logo--github/24';\n\nexport const Header = ({ description, links, title }) => (\n  <Tile className=\"header\">\n    <div className=\"title-container\">\n      <h2 className=\"header-title\">{title}</h2>\n      <p>{description}</p>\n    </div>\n    <div className=\"link-container\">\n      <div className=\"link-wrapper\">{links.map(link => link)}</div>\n    </div>\n  </Tile>\n);\n\nHeader.propTypes = {\n  description: PropTypes.string,\n  links: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  description: '',\n  links: [\n    <Link\n      className=\"link\"\n      key=\"api-link\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      href=\"https://cloud.ibm.com/apidocs/natural-language-understanding\"\n    >\n      <p className=\"link-text\">API reference</p>\n      <Api124 className=\"link-icon\" />\n    </Link>,\n    <Link\n      className=\"link\"\n      key=\"docs-link\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      href=\"https://cloud.ibm.com/docs/services/natural-language-understanding?topic=natural-language-understanding-getting-started\"\n    >\n      <p className=\"link-text\">Documentation</p>\n      <Document24 className=\"link-icon\" />\n    </Link>,\n    <Link\n      className=\"link\"\n      key=\"github-link\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      href=\"https://github.com/watson-developer-cloud/natural-language-understanding-code-pattern\"\n    >\n      <p className=\"link-text\">GitHub</p>\n      <LogoGithub24 className=\"link-icon\" />\n    </Link>,\n    <Link\n      className=\"link getting-started\"\n      key=\"ibm-cloud-link\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      href=\"https://cloud.ibm.com/registration?target=%2Fcatalog%2Fservices%2Fnatural-language-understanding%3FhideTours%3Dtrue%26&cm_sp=WatsonPlatform-WatsonPlatform-_-OnPageNavCTA-IBMWatson_NaturalLanguageUnderstanding-_-Watson_Developer_Website\"\n    >\n      <Button className=\"link-button\" kind=\"tertiary\" renderIcon={Launch16}>\n        Start for free on IBM Cloud\n      </Button>\n      <IbmCloud24 className=\"link-icon\" />\n    </Link>,\n  ],\n  title: '',\n};\n\nexport default Header;\n","import Header from './Header';\nexport default Header;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  FormGroup,\n  TextArea,\n  Tile,\n  Button,\n  ContentSwitcher,\n  Switch,\n} from 'carbon-components-react';\nimport isURL from 'validator/lib/isURL';\n\nimport defaultInputs from '../../data/input.json';\n\nexport const validateInput = (type, { url, text }) => {\n  if (type === 'text' && text.length === 0) {\n    return 'Text is required';\n  }\n  if (type === 'url' && !isURL(url)) {\n    return 'A valid URL is required';\n  }\n  return null;\n};\n\nexport const ControlContainer = ({ isAnalyzing, onAnalyzeCall }) => {\n  const [inputType, setInputType] = useState('text');\n  const [url, setUrl] = useState(defaultInputs.url);\n  const [text, setText] = useState(defaultInputs.text);\n\n  const onInputTypeChange = e => {\n    setInputType(e.name);\n  };\n\n  const onInputChange = e => {\n    if (inputType === 'url') {\n      setUrl(e.target.value);\n    } else {\n      setText(e.target.value);\n    }\n  };\n  let invalidInputMessage = validateInput(inputType, { text, url });\n  return (\n    <Tile className=\"control-container\">\n      <h3 className=\"control-container__title\">\n        Analyze a news article or other content\n      </h3>\n      <div className=\"control-container__control-panel\">\n        <ContentSwitcher\n          className=\"control-container__content-switch\"\n          onChange={onInputTypeChange}\n        >\n          <Switch name=\"text\" text=\"Text\" selected={inputType === 'text'} />\n          <Switch name=\"url\" text=\"URL\" selected={inputType === 'url'} />\n        </ContentSwitcher>\n      </div>\n      <FormGroup legendText={`${inputType.toUpperCase()} to analyze`}>\n        <TextArea\n          id=\"custom-input\"\n          labelText=\"label\"\n          onChange={onInputChange}\n          placeholder={`Type the ${inputType.toUpperCase()} to analyze...`}\n          invalid={!!invalidInputMessage}\n          invalidText={invalidInputMessage}\n          value={inputType === 'url' ? url : text}\n          hideLabel\n          rows={10}\n          light\n        />\n      </FormGroup>\n      <FormGroup legendText=\"\">\n        <Button\n          className=\"submit-button\"\n          disabled={isAnalyzing || !!invalidInputMessage}\n          kind=\"primary\"\n          onClick={() => {\n            onAnalyzeCall(inputType === 'url' ? { url } : { text });\n          }}\n        >\n          Analyze\n        </Button>\n      </FormGroup>\n    </Tile>\n  );\n};\n\nControlContainer.propTypes = {\n  onAnalyzeCall: PropTypes.func,\n  isAnalyzing: PropTypes.bool,\n};\n\nControlContainer.defaultProps = {\n  isAnalyzing: false,\n};\n\nexport default ControlContainer;\n","import ControlContainer from './ControlContainer';\nexport default ControlContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst formatNumber = num => (Math.round(num * 100) / 100).toFixed(2);\nconst widthNumber = num => Math.abs(Math.round(num * 100));\n\nfunction ProgressBar({ progress }) {\n  return (\n    <div className=\"bar-container\">\n      <div className=\"bar-full\">\n        <div className=\"bar\" style={{ width: `${widthNumber(progress)}%` }} />\n      </div>\n      <div className=\"progress\">{formatNumber(progress)}</div>\n    </div>\n  );\n}\n\nProgressBar.propTypes = {\n  progress: PropTypes.number,\n};\n\nProgressBar.defaultProps = {\n  progress: 0,\n};\n\nexport default ProgressBar;\n","import ProgressBar from './ProgressBar';\nexport default ProgressBar;\n","/* eslint-disable react/jsx-key */\nimport React from 'react';\nimport { DataTable } from 'carbon-components-react';\n\nconst {\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableBody,\n  TableHeader,\n} = DataTable;\n\nexport const renderTable = renderCell => ({\n  rows,\n  headers,\n  getHeaderProps,\n}) => (\n  <TableContainer>\n    <Table>\n      <TableHead>\n        <TableRow>\n          {headers.map(header => (\n            <TableHeader {...getHeaderProps({ header })}>\n              {header.header}\n            </TableHeader>\n          ))}\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {rows.map(row => (\n          <TableRow key={row.id}>{row.cells.map(renderCell)}</TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  </TableContainer>\n);\n","/* eslint-disable react/jsx-key */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { DataTable } from 'carbon-components-react';\nimport ProgressBar from '../ProgressBar';\n\nimport { renderTable } from './utils';\n\nexport const Categories = ({ language, result }) => {\n  if (!result || result.length === 0) {\n    return <p>{`No Categories returned for the input in language: ${language}.`}</p>;\n  }\n\n  const headers = [\n    {\n      header: 'Label',\n      key: 'label',\n    },\n    {\n      header: 'Score',\n      key: 'score',\n    },\n  ];\n\n  const rows = result.map((keyword, i) => ({ ...keyword, id: `${i}` }));\n\n  const renderCell = cell => {\n    return (\n      <DataTable.TableCell key={cell.id}>\n        {cell.info.header === 'score' ? (\n          <ProgressBar progress={cell.value} />\n        ) : (\n          cell.value\n        )}\n      </DataTable.TableCell>\n    );\n  };\n\n  return (\n    <DataTable rows={rows} headers={headers} render={renderTable(renderCell)} />\n  );\n};\n\nCategories.propTypes = {\n  result: PropTypes.array,\n  language: PropTypes.string,\n};\n\nCategories.defaultProps = {\n  result: [],\n  language: 'en',\n};\n\nexport default Categories;\n","/* eslint-disable react/jsx-key */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { DataTable } from 'carbon-components-react';\nimport ProgressBar from '../ProgressBar';\n\nimport { renderTable } from './utils';\n\nexport const Concepts = ({ language, result }) => {\n  if (!result || result.length === 0) {\n    return <p>{`No Concepts returned for the input in language: ${language}.`}</p>;\n  }\n\n  const headers = [\n    {\n      header: 'Text',\n      key: 'text',\n    },\n    {\n      header: 'Relevance',\n      key: 'relevance',\n    },\n  ];\n\n  const rows = result.map((keyword, i) => ({ ...keyword, id: `${i}` }));\n\n  const renderCell = cell => {\n    return (\n      <DataTable.TableCell key={cell.id}>\n        {cell.info.header === 'relevance' ? (\n          <ProgressBar progress={cell.value} />\n        ) : (\n          cell.value\n        )}\n      </DataTable.TableCell>\n    );\n  };\n\n  return (\n    <DataTable rows={rows} headers={headers} render={renderTable(renderCell)} />\n  );\n};\n\nConcepts.propTypes = {\n  result: PropTypes.array,\n  language: PropTypes.string,\n};\n\nConcepts.defaultProps = {\n  result: [],\n  language: 'en',\n};\n\nexport default Concepts;\n","/* eslint-disable react/jsx-key */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { DataTable } from 'carbon-components-react';\n\nimport ProgressBar from '../ProgressBar';\nimport { renderTable } from './utils';\n\nexport const Emotion = ({ language, result }) => {\n  if (!result || !result.document) {\n    return <p>{`No Emotion results returned for the input in language: ${language}.`}</p>;\n  }\n\n  const { emotion } = result.document;\n\n  const headers = [\n    {\n      header: 'Emotion',\n      key: 'emotion',\n    },\n    {\n      header: 'Score',\n      key: 'score',\n    },\n  ];\n\n  const rows = Object.keys(emotion).map(e => ({\n    emotion: e,\n    score: emotion[e],\n    id: e,\n  }));\n\n  const renderCell = cell => {\n    return (\n      <DataTable.TableCell key={cell.id}>\n        {cell.info.header === 'score' ? (\n          <ProgressBar progress={cell.value} />\n        ) : (\n          cell.value\n        )}\n      </DataTable.TableCell>\n    );\n  };\n\n  return (\n    <div>\n      <DataTable\n        rows={rows}\n        headers={headers}\n        render={renderTable(renderCell)}\n      />\n    </div>\n  );\n};\n\nEmotion.propTypes = {\n  result: PropTypes.object,\n  language: PropTypes.string,\n};\n\nEmotion.defaultProps = {\n  result: null,\n  language: 'en',\n};\n\nexport default Emotion;\n","/* eslint-disable react/jsx-key */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { DataTable } from 'carbon-components-react';\nimport ProgressBar from '../ProgressBar';\n\nimport { renderTable } from './utils';\n\nexport const Entities = ({ language, result }) => {\n  if (!result || result.length === 0) {\n    return <p>{`No Entities returned for the input in language: ${language}.`}</p>;\n  }\n\n  const headers = [\n    {\n      header: 'Text',\n      key: 'text',\n    },\n    {\n      header: 'Type',\n      key: 'type',\n    },\n    {\n      header: 'Relevance',\n      key: 'relevance',\n    },\n  ];\n\n  const rows = result.map((keyword, i) => ({ ...keyword, id: `${i}` }));\n\n  const renderCell = cell => {\n    return (\n      <DataTable.TableCell key={cell.id}>\n        {cell.info.header === 'relevance' ? (\n          <ProgressBar progress={cell.value} />\n        ) : (\n          cell.value\n        )}\n      </DataTable.TableCell>\n    );\n  };\n\n  return (\n    <DataTable rows={rows} headers={headers} render={renderTable(renderCell)} />\n  );\n};\n\nEntities.propTypes = {\n  result: PropTypes.array,\n  language: PropTypes.string,\n};\n\nEntities.defaultProps = {\n  result: [],\n  language: 'en',\n};\n\nexport default Entities;\n","/* eslint-disable react/jsx-key */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { DataTable } from 'carbon-components-react';\nimport ProgressBar from '../ProgressBar';\n\nimport { renderTable } from './utils';\n\nexport const Keywords = ({ language, result }) => {\n  if (!result || result.length === 0) {\n    return <p>{`No Keywords returned for the input in language: ${language}.`}</p>;\n  }\n\n  const headers = [\n    {\n      header: 'Text',\n      key: 'text',\n    },\n    {\n      header: 'Relevance',\n      key: 'relevance',\n    },\n  ];\n\n  const rows = result.map((keyword, i) => ({ ...keyword, id: `${i}` }));\n\n  const renderCell = cell => {\n    return (\n      <DataTable.TableCell key={cell.id}>\n        {cell.info.header === 'relevance' ? (\n          <ProgressBar progress={cell.value} />\n        ) : (\n          cell.value\n        )}\n      </DataTable.TableCell>\n    );\n  };\n\n  return (\n    <DataTable\n      sortRow={(a, b) => a < b}\n      rows={rows}\n      headers={headers}\n      render={renderTable(renderCell)}\n    />\n  );\n};\n\nKeywords.propTypes = {\n  result: PropTypes.array,\n  language: PropTypes.string,\n};\n\nKeywords.defaultProps = {\n  result: [],\n  language: 'en',\n};\n\nexport default Keywords;\n","/* eslint-disable react/jsx-key */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { DataTable } from 'carbon-components-react';\n\nimport ProgressBar from '../ProgressBar';\nimport { renderTable } from './utils';\n\nexport const Sentiment = ({ language, result }) => {\n  if (!result || !result.document) {\n    return <p>{`No Sentiment results returned for the input in language: ${language}.`}</p>;\n  }\n\n  const headers = [\n    {\n      header: 'Sentiment',\n      key: 'label',\n    },\n    {\n      header: 'Score',\n      key: 'score',\n    },\n  ];\n\n  const rows = [\n    {\n      id: 'sentiment',\n      ...result.document,\n    },\n  ];\n\n  const renderCell = cell => {\n    return (\n      <DataTable.TableCell key={cell.id}>\n        {cell.info.header === 'score' ? (\n          <ProgressBar progress={cell.value} />\n        ) : (\n          cell.value\n        )}\n      </DataTable.TableCell>\n    );\n  };\n\n  return (\n    <div>\n      <DataTable\n        rows={rows}\n        headers={headers}\n        render={renderTable(renderCell)}\n      />\n    </div>\n  );\n};\n\nSentiment.propTypes = {\n  result: PropTypes.object,\n  language: PropTypes.string,\n};\n\nSentiment.defaultProps = {\n  result: null,\n  language: 'en',\n};\n\nexport default Sentiment;\n","/* eslint-disable react/jsx-key */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { DataTable } from 'carbon-components-react';\n\nimport { renderTable } from './utils';\n\nexport const Syntax = ({ language, result }) => {\n  if (!result || !result.tokens) {\n    return <p>{`No Syntax returned for the input in language: ${language}.`}</p>;\n  }\n\n  const headers = [\n    {\n      header: 'Text',\n      key: 'text',\n    },\n    {\n      header: 'Part of Speech',\n      key: 'part_of_speech',\n    },\n    {\n      header: 'Lemma',\n      key: 'lemma',\n    },\n  ];\n\n  const rows = result.tokens.map((keyword, i) => ({ ...keyword, id: `${i}` }));\n\n  const renderCell = cell => {\n    return (\n      <DataTable.TableCell key={cell.id}>{cell.value}</DataTable.TableCell>\n    );\n  };\n\n  return (\n    <DataTable rows={rows} headers={headers} render={renderTable(renderCell)} />\n  );\n};\n\nSyntax.propTypes = {\n  result: PropTypes.shape({\n    tokens: PropTypes.array,\n  }),\n  language: PropTypes.string,\n};\n\nSyntax.defaultProps = {\n  result: null,\n  language: 'en',\n};\n\nexport default Syntax;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { CodeSnippet } from 'carbon-components-react';\n\nexport const SemanticRoles = props => {\n  const renderResult = result => {\n    if (!result) {\n      return null;\n    }\n\n    return (\n      <CodeSnippet type=\"multi\">{JSON.stringify(result, null, 2)}</CodeSnippet>\n    );\n  };\n\n  return <div>{renderResult(props.result)}</div>;\n};\n\nSemanticRoles.propTypes = {\n  result: PropTypes.array,\n};\n\nSemanticRoles.defaultProps = {\n  result: null,\n};\n\nexport default SemanticRoles;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ISO6391 from 'iso-639-1';\n\nimport {\n  CodeSnippetSkeleton,\n  Tile,\n  FormGroup,\n  Dropdown,\n  ContentSwitcher,\n  Switch,\n} from 'carbon-components-react';\nimport ReactJson from 'react-json-view';\n\nimport {\n  Categories,\n  Concepts,\n  Emotion,\n  Entities,\n  Keywords,\n  Sentiment,\n  Syntax,\n  //SemanticRoles,\n} from '../Features';\n\nconst features = {\n  //semantic_roles: SemanticRoles,\n  categories: Categories,\n  concepts: Concepts,\n  emotion: Emotion,\n  entities: Entities,\n  keywords: Keywords,\n  sentiment: Sentiment,\n  syntax: Syntax,\n};\n\nexport const OutputContainer = ({ isAnalyzing, results }) => {\n  const [selectedFeature, setSelectedFeature] = useState('keywords');\n  const [outputType, setOutputType] = useState('table');\n\n  const onOutputTypeChange = e => {\n    setOutputType(e.name);\n  };\n  const onSelectedFeatureChange = ({ selectedItem }) => {\n    setSelectedFeature(selectedItem);\n  };\n\n  const renderResults = (isAnalyzing, results) => {\n    if (isAnalyzing) {\n      return <CodeSnippetSkeleton type=\"multi\" />;\n    }\n\n    if (!results) {\n      return null;\n    }\n\n    const Feature = features[selectedFeature];\n    return (\n      <>\n        <FormGroup legendText=\"Feature\">\n          <Dropdown\n            id=\"feature-dropdown\"\n            label=\"Features\"\n            light\n            items={Object.keys(features)}\n            selectedItem={selectedFeature}\n            onChange={onSelectedFeatureChange}\n          />\n        </FormGroup>\n        <div className=\"output-container__control-panel\">\n          <ContentSwitcher\n            className=\"output-container__content-switch\"\n            onChange={onOutputTypeChange}\n            selectedIndex={outputType === 'table' ? 0 : 1}\n          >\n            <Switch name=\"table\" text=\"Table\" />\n            <Switch name=\"json\" text=\"JSON\" />\n          </ContentSwitcher>\n        </div>\n        <FormGroup legendText=\"Result\">\n          {outputType === 'table' ? (\n            <Feature\n              result={results[selectedFeature]}\n              language={ISO6391.getName(results.language)}\n            />\n          ) : (\n            <ReactJson\n              name={false}\n              enableClipboard={false}\n              displayDataTypes={false}\n              displayObjectSize={false}\n              collapsed={2}\n              collapseStringsAfterLength={20}\n              theme=\"monokai\"\n              style={{ lineHeight: '1.3em' }}\n              src={results[selectedFeature]}\n            />\n          )}\n        </FormGroup>\n      </>\n    );\n  };\n\n  return (\n    <Tile className=\"output-container\">\n      <h3 className=\"output-container__title\">Output</h3>\n      {renderResults(isAnalyzing, results)}\n    </Tile>\n  );\n};\n\nOutputContainer.propTypes = {\n  results: PropTypes.object,\n  isAnalyzing: PropTypes.bool,\n};\n\nOutputContainer.defaultProps = {\n  results: null,\n  isAnalyzing: false,\n};\n\nexport default OutputContainer;\n","import OutputContainer from './OutputContainer';\nexport default OutputContainer;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { ToastNotification } from 'carbon-components-react';\n\nconst NOTIFICATION_HAS_BEEN_SEEN = 'notificationHasBeenSeen';\n\nexport const Toast = ({\n  caption,\n  children,\n  className,\n  hideAfterFirstDisplay,\n  hideCloseButton,\n  iconDescription,\n  kind,\n  lowContrast,\n  onCloseButtonClick,\n  role,\n  subtitle,\n  timeout,\n  title,\n}) => {\n  const [id, setId] = useState();\n  const [hideToast, setHideToast] = useState(false);\n\n  useEffect(() => {\n    setId(\n      Math.random()\n        .toString(36)\n        .substring(2, 15) +\n        Math.random()\n          .toString(36)\n          .substring(2, 15),\n    );\n  }, []);\n\n  useEffect(() => {\n    const element = document.querySelector(`.custom-toast-${id}`);\n    if (element) {\n      element.className += 'enter';\n    }\n  }, [id]);\n\n  useEffect(() => {\n    if (\n      hideAfterFirstDisplay &&\n      typeof window !== undefined &&\n      typeof window.localStorage !== undefined &&\n      window.localStorage.getItem(NOTIFICATION_HAS_BEEN_SEEN) === 'true'\n    ) {\n      setHideToast(true);\n    }\n  }, [hideAfterFirstDisplay]);\n\n  return hideToast ? null : (\n    <ToastNotification\n      caption={caption}\n      className={`custom-toast-${id} ${className}`}\n      hideCloseButton={hideCloseButton}\n      iconDescription={iconDescription}\n      kind={kind}\n      lowContrast={lowContrast}\n      onCloseButtonClick={() => {\n        if (\n          hideAfterFirstDisplay &&\n          typeof window !== undefined &&\n          typeof window.localStorage !== undefined\n        ) {\n          window.localStorage.setItem(NOTIFICATION_HAS_BEEN_SEEN, 'true');\n        }\n        onCloseButtonClick();\n      }}\n      role={role}\n      subtitle={subtitle}\n      timeout={timeout}\n      title={title}\n    >\n      {children}\n    </ToastNotification>\n  );\n};\n\nToast.propTypes = {\n  caption: PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  hideAfterFirstDisplay: PropTypes.bool,\n  hideCloseButton: PropTypes.bool,\n  iconDescription: PropTypes.string,\n  kind: PropTypes.string,\n  lowContrast: PropTypes.bool,\n  onCloseButtonClick: PropTypes.func,\n  role: PropTypes.string,\n  subtitle: PropTypes.string,\n  timeout: PropTypes.number,\n  title: PropTypes.string,\n};\n\nToast.defaultProps = {\n  caption: '',\n  children: null,\n  className: '',\n  hideAfterFirstDisplay: true,\n  hideCloseButton: false,\n  iconDescription: 'closes notification',\n  kind: 'error',\n  lowContrast: false,\n  onCloseButtonClick: () => {},\n  role: 'alert',\n  subtitle: '',\n  timeout: 0,\n  title: '',\n};\n\nexport default Toast;\n","import Toast from './Toast';\n\nexport default Toast;\n","import React, { useState } from 'react';\nimport ControlContainer from '../ControlContainer';\nimport OutputContainer from '../OutputContainer';\nimport Toast from '../Toast';\n\nconst GDPR_DISCLAIMER =\n  'This system is for demonstration purposes only and is not intended to process Personal Data. No Personal Data is to be entered into this system as it may not have the necessary controls in place to meet the requirements of the General Data Protection Regulation (EU) 2016/679.';\n\nconst features = {\n  concepts: {},\n  entities: {},\n  keywords: {},\n  categories: {},\n  emotion: {},\n  sentiment: {},\n  semantic_roles: {},\n  syntax: { tokens: { lemma: true, part_of_speech: true }, sentences: true },\n};\n\nexport const ServiceContainer = () => {\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [results, setResults] = useState(null);\n  const [error, setError] = useState(null);\n\n  const onAnalyzeCall = params => {\n    setIsAnalyzing(true);\n    fetch('/api/analyze', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ ...params, features }),\n    })\n      .then(response => response.json())\n      .then(data => {\n        if (data.error) {\n          setResults(null);\n          setError(data.error);\n        } else {\n          setResults(data);\n        }\n      })\n      .catch(err => {\n        setResults(null);\n        setError({\n          error: {\n            title: 'Internal Server Error',\n            description: err.message,\n          },\n        });\n      })\n      .finally(() => setIsAnalyzing(false));\n  };\n\n  return (\n    <div className=\"service-container\">\n      <Toast kind=\"info\" subtitle={GDPR_DISCLAIMER} />\n      {error && (\n        <Toast\n          kind=\"error\"\n          title={error.title}\n          subtitle={error.description}\n          hideAfterFirstDisplay={false}\n          timeout={5000}\n          onCloseButtonClick={() => setError(null)}\n        />\n      )}\n      <ControlContainer\n        onAnalyzeCall={onAnalyzeCall}\n        isAnalyzing={isAnalyzing}\n      />\n      <OutputContainer isAnalyzing={isAnalyzing} results={results} />\n    </div>\n  );\n};\n\nexport default ServiceContainer;\n","import ServiceContainer from './ServiceContainer';\nexport default ServiceContainer;\n","import { useEffect } from 'react';\n\nconst useScript = url => {\n  useEffect(() => {\n    const script = document.createElement('script');\n\n    script.src = url;\n    script.async = true;\n\n    document.body.appendChild(script);\n\n    return () => {\n      document.body.removeChild(script);\n    };\n  }, [url]);\n};\n\nexport default useScript;\n","import React from 'react';\nimport './styles/main.scss';\nimport Header from './components/Header';\nimport ServiceContainer from './components/ServiceContainer';\nimport { description, title } from './data/input.json';\nimport useScript from './hooks/useScript';\n\nexport const App = () => {\n  useScript(\n    'https://cdn.jsdelivr.net/gh/watson-developer-cloud/watson-developer-cloud.github.io@master/analytics.js',\n  );\n\n  return (\n    <div className=\"app-container\">\n      <Header description={description} title={title} />\n      <ServiceContainer />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/main.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}